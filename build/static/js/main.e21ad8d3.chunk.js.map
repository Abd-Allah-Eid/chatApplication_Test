{"version":3,"sources":["components/UsernameForm.js","components/RoomList.js","components/Message.js","components/MessageList.js","components/SendMessageForm.js","components/NewRoomForm.js","components/ChatScreen.js","config.js","App.js","index.js"],"names":["UsernameForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","username","onSubmit","bind","assertThisInitialized","onChange","e","preventDefault","setState","target","value","react_default","a","createElement","type","placeholder","Component","RoomList","orderedRooms","toConsumableArray","rooms","sort","b","id","loading","className","map","room","active","roomId","key","onClick","subscribeToRoom","href","name","React","Message","console","log","text","MessageList","node","ReactDOM","findDOMNode","scrollTop","clientHeight","scrollHeight","shouldScrollToBottom","messages","message","index","components_Message","senderId","SendMessageForm","textMessage","handleChange","handleSubmit","event","_event$target","defineProperty","sendMessage","disabled","NewRoomForm","roomName","createRoom","required","ChatScreen","joinableRooms","joinedRooms","getRooms","_this2","ChatKit","ChatManager","instanceLocator","userId","currentUsername","tokenProvider","TokenProvider","url","connect","then","currentUser","catch","err","_this3","getJoinableRooms","_this4","messageLimit","hooks","onMessage","concat","_this5","components_RoomList","components_MessageList","components_SendMessageForm","components_NewRoomForm","App","currentScreen","onUsernameSubmitted","fetch","method","headers","Content-Type","body","JSON","stringify","response","error","components_UsernameForm","components_ChatScreen","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.e21ad8d3.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass UsernameForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      username: '',\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n    this.props.onSubmit(this.state.username)\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ username: e.target.value })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2>What is your usernane?</h2>\r\n          <form onSubmit={this.onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Your full name\"\r\n              onChange={this.onChange}\r\n            />\r\n            <input type=\"submit\" />\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UsernameForm","import React from 'react'\r\n\r\nclass RoomList extends React.Component {\r\n    \r\n    render(){\r\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id)\r\n        const loading = \"Loading...\"\r\n        while(this.props.loading) {\r\n            return loading\r\n        }\r\n        return (\r\n            <div className=\"rooms-list\">\r\n                <ul>\r\n                    <h3>Your rooms:</h3>\r\n                    {orderedRooms.map(room => {\r\n                        const active = this.props.roomId === room.id ? \" active\": \"\";\r\n                        return (\r\n                            <li key={room.id} className={\"room\" + active}>\r\n                                <a onClick={()=>this.props.subscribeToRoom(room.id)} href=\"#\"># {room.name} </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default RoomList","import React from 'react'\r\n\r\nfunction Message (props) {\r\n    console.log(props)\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"message-username\">{props.username}</div>\r\n            <div className=\"message-text\">{props.text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Message from './Message'\r\n\r\n\r\nclass MessageList extends React.Component {\r\n\r\n    componentWillUpdate() {\r\n        const node = ReactDOM.findDOMNode(this)\r\n        /* \r\n        scrollTop: how far we've scrolled \r\n        clientHeight: height of window\r\n        scrollHeight: height of entire element(message list)\r\n        */\r\n        console.log(node.scrollTop,node.clientHeight,node.scrollHeight)\r\n        this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 200 >= node.scrollHeight\r\n    }\r\n    componentDidUpdate() {\r\n        if(this.shouldScrollToBottom) {\r\n            const node = ReactDOM.findDOMNode(this)\r\n            node.scrollTop = node.scrollHeight\r\n        }\r\n       \r\n    }\r\n    render() {\r\n        // console.log(this.props)\r\n        if(!this.props.roomId) {\r\n            return (\r\n                <div className=\"message-list\">\r\n                <h1 className=\"welcome\">Hello&nbsp;{this.props.username}</h1>\r\n                    <div className=\"join-room\">\r\n                         Join a room! &rarr;\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"message-list\">\r\n                {this.props.messages.map((message, index) => {\r\n                    return (\r\n                        <Message key={index} username={message.senderId} text= {message.text}/>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React from 'react'\r\n\r\nclass SendMessageForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            textMessage: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleChange(event) {\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        \r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        // console.log(this.state.textMessage)\r\n        this.props.sendMessage(this.state.textMessage)\r\n        this.setState({\r\n            textMessage: ''\r\n        })\r\n    }\r\n    render() {\r\n        // console.log(this.state.textMessage)\r\n        return (\r\n            <form \r\n                className=\"send-message-form\"\r\n                onSubmit={this.handleSubmit}\r\n            >\r\n                <input\r\n                    disabled={this.props.disabled}\r\n                    placeholder=\"Type a message...\"\r\n                    type=\"text\"\r\n                    name=\"textMessage\"\r\n                    value={this.state.textMessage}\r\n                    onChange={this.handleChange}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendMessageForm","import React from 'react'\r\n\r\nclass NewRoomForm extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            roomName: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            roomName: event.target.value\r\n        })\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n        this.props.createRoom(this.state.roomName)\r\n        this.setState({roomName: ''})\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"new-room-form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        value={this.state.roomName}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\" \r\n                        placeholder=\"Create a room\" \r\n                        required />\r\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewRoomForm","\r\nimport React, { Component } from 'react';\r\nimport './../App.css';\r\nimport RoomList from './RoomList'\r\nimport MessageList from './MessageList'\r\nimport SendMessageForm from './SendMessageForm'\r\nimport NewRoomForm from './NewRoomForm'\r\nimport { tokenUrl, instanceLocator } from '../config'\r\nimport ChatKit from '@pusher/chatkit-client'\r\n\r\nclass ChatScreen extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      loading: null,\r\n      roomId: null,\r\n      messages: [],\r\n      joinableRooms: [],\r\n      joinedRooms: [],\r\n    }\r\n    this.sendMessage = this.sendMessage.bind(this)\r\n    this.subscribeToRoom = this.subscribeToRoom.bind(this)\r\n    this.getRooms = this.getRooms.bind(this)\r\n    this.createRoom = this.createRoom.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: true})\r\n    const chatManager = new ChatKit.ChatManager({\r\n      instanceLocator,\r\n      userId: this.props.currentUsername,\r\n      tokenProvider: new ChatKit.TokenProvider({\r\n        url: 'http://localhost:3001/authenticate'\r\n      })\r\n\r\n    })\r\n\r\n    chatManager.connect()\r\n      .then(currentUser => {\r\n        this.currentUser = currentUser\r\n        this.getRooms()\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n      .catch(err => console.log('error on joinableRooms: ', err))\r\n      \r\n    \r\n  }\r\n\r\n  getRooms() {\r\n    this.currentUser.getJoinableRooms()\r\n          .then(joinableRooms =>{\r\n            this.setState({\r\n              joinableRooms,\r\n              joinedRooms: this.currentUser.rooms\r\n            })\r\n          })\r\n        .catch(err => console.log('error on joinableRooms: ', err))\r\n  }\r\n\r\n  subscribeToRoom(roomId) {\r\n    this.setState({\r\n      messages: []\r\n    })\r\n    this.currentUser.subscribeToRoom({\r\n      roomId: roomId,\r\n      messageLimit: 20,\r\n      hooks: {\r\n        onMessage: message => {\r\n          // console.log(\"Received message:\", message.text)\r\n          this.setState({\r\n            messages: [...this.state.messages, message]\r\n          })\r\n        }\r\n      }\r\n    })\r\n    .then(room => {\r\n      this.setState({\r\n        roomId: room.id\r\n      })\r\n      this.getRooms()\r\n    })\r\n    .catch(err => console.log('error on subscribing to room: ',err))\r\n  }\r\n  \r\n\r\n  sendMessage(text) {\r\n    this.currentUser.sendMessage({\r\n      text: text,\r\n      roomId: this.state.roomId\r\n    })\r\n  }\r\n\r\n  createRoom(name) {\r\n    this.currentUser.createRoom({\r\n      name\r\n    })\r\n    .then(room => this.subscribeToRoom(room.id))\r\n    .catch(err => console.log(\"error on createRoom\",err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <RoomList \r\n          loading={this.state.loading}\r\n          roomId={this.state.roomId}\r\n          subscribeToRoom={this.subscribeToRoom} \r\n          rooms={[...this.state.joinableRooms,...this.state.joinedRooms]}\r\n        />\r\n        <MessageList \r\n          messages={this.state.messages}\r\n          roomId={this.state.roomId}\r\n          username={this.props.currentUsername}\r\n        />\r\n        <SendMessageForm \r\n          sendMessage={this.sendMessage}\r\n          disabled={!this.state.roomId}\r\n        />\r\n        <NewRoomForm createRoom={this.createRoom}/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChatScreen;\r\n","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/a781f6d8-0b24-4595-9747-1f433a69991b/token\"\r\nconst instanceLocator = \"v1:us1:a781f6d8-0b24-4595-9747-1f433a69991b\"\r\n\r\nexport {tokenUrl, instanceLocator}","import React, { Component } from 'react'\r\nimport UsernameForm from './components/UsernameForm'\r\nimport ChatScreen from './components/ChatScreen'\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state= {\r\n      currentUsername: '',\r\n      currentScreen: 'WhatIsYourUsernameScreen',\r\n    }\r\n    this.onUsernameSubmitted = this.onUsernameSubmitted.bind(this)\r\n  }\r\n\r\n  onUsernameSubmitted(username) {\r\n    fetch('http://localhost:3001/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username }),\r\n    })\r\n      .then(response => {\r\n        this.setState({\r\n          currentUsername: username,\r\n          currentScreen: 'ChatScreen',\r\n        })\r\n      })\r\n      .catch(error => console.error('error', error))\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    // return <UsernameForm onSubmit={this.onUsernameSubmitted}/>\r\n    if (this.state.currentScreen === 'WhatIsYourUsernameScreen') {\r\n      return <UsernameForm onSubmit={this.onUsernameSubmitted} />\r\n    }\r\n    if (this.state.currentScreen === 'ChatScreen') {\r\n      return <ChatScreen currentUsername={this.state.currentUsername} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}